package municipalidad.pto.beans;

import java.io.Serializable;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import org.primefaces.event.RowEditEvent;

import municipalidad.pto.model.Articulos;
import municipalidad.pto.objetos.ProveedoresTabla;
import municipalidad.pto.service.AreaService;
import municipalidad.pto.service.ArticulosService;
import municipalidad.pto.service.EstadoService;
import municipalidad.pto.service.TipoService;
import municipalidad.pto.service.UbicacionService;
import municipalidad.pto.service.UnidadMedidaService;

@ManagedBean
@SessionScoped
public class ArticuloBean implements Serializable{

	@ManagedProperty(value="#{articulosService}")
	ArticulosService articulosService;
	
	@ManagedProperty(value="#{areaService}")
	AreaService areaService;
	
	@ManagedProperty(value="#{estadoService}")
	EstadoService estadoService;
	
	@ManagedProperty(value="#{tipoService}")
	TipoService tipoService;
	
	@ManagedProperty(value="#{unidadMedidaService}")
	UnidadMedidaService unidadMedidaService;
	
	@ManagedProperty(value="#{ubicacionService}")
	UbicacionService ubicacionService;
	
	private String codigoAntiguo;
	private String articulo;
	private Integer estado;
	private Integer area;
	private Integer tipo;
	private Integer unidadMedida;
	private String marca;
	private Integer ubicacion;
	private List<Articulos> listaArticuloBuscar;
	
	

	public void setEstadoService(EstadoService estadoService) {
		this.estadoService = estadoService;
	}
	public void setTipoService(TipoService tipoService) {
		this.tipoService = tipoService;
	}
	public void setUnidadMedidaService(UnidadMedidaService unidadMedidaService) {
		this.unidadMedidaService = unidadMedidaService;
	}
	public void setUbicacionService(UbicacionService ubicacionService) {
		this.ubicacionService = ubicacionService;
	}
	public void setArticulosService(ArticulosService articulosService) {
		this.articulosService = articulosService;
	}
	
	public void setAreaService(AreaService areaService) {
		this.areaService = areaService;
	}
	public String getCodigoAntiguo() {
		return codigoAntiguo;
	}
	public void setCodigoAntiguo(String codigoAntiguo) {
		this.codigoAntiguo = codigoAntiguo;
	}
	public String getArticulo() {
		return articulo;
	}
	public void setArticulo(String articulo) {
		this.articulo = articulo;
	}
	public Integer getEstado() {
		return estado;
	}
	public void setEstado(Integer estado) {
		this.estado = estado;
	}
	public Integer getArea() {
		return area;
	}
	public void setArea(Integer area) {
		this.area = area;
	}
	public Integer getTipo() {
		return tipo;
	}
	public void setTipo(Integer tipo) {
		this.tipo = tipo;
	}
	public Integer getUnidadMedida() {
		return unidadMedida;
	}
	public void setUnidadMedida(Integer unidadMedida) {
		this.unidadMedida = unidadMedida;
	}
	public String getMarca() {
		return marca;
	}
	public void setMarca(String marca) {
		this.marca = marca;
	}
	public Integer getUbicacion() {
		return ubicacion;
	}
	public void setUbicacion(Integer ubicacion) {
		this.ubicacion = ubicacion;
	}
	public List<Articulos> listaArticulos(){
		return articulosService.listaArticulos();
	}
	public void deleteArticulo(int id){
		articulosService.deleteArticulos(articulosService.findArticuloById(id));
	}
	public List<Articulos> getListaArticuloBuscar() {
		return listaArticuloBuscar;
	}
	public void setListaArticuloBuscar(List<Articulos> listaArticuloBuscar) {
		this.listaArticuloBuscar = listaArticuloBuscar;
	}
	public void mensaje(String titulo,String mensaje){
		FacesContext context = FacesContext.getCurrentInstance();
		context.addMessage(null, new FacesMessage(titulo,  mensaje) );
	}
	
	public void guardar(){
		
		if(getArticulo().equals("") || getMarca().equals("") || getArea()==0 || getEstado()==0 ||getTipo()==0 ||getUnidadMedida()==0 ||getUbicacion()==0){
			
			mensaje("Guardado","debe ingresar los campos obligatorios");
		
		}else{
			Articulos articulo=new Articulos();
			articulo.setArticulo(getArticulo());
			articulo.setCodigoAntiguo(getCodigoAntiguo());
			articulo.setMarca(getMarca());
			articulo.setArea(areaService.findAreaById(getArea()));
			articulo.setEstado(estadoService.findEstadoById(getEstado()));
			articulo.setTipo(tipoService.findTipoById(getTipo()));
			articulo.setUnidadMedida(unidadMedidaService.findUnidadMedidaById(getUnidadMedida()));
			articulo.setUbicacion(ubicacionService.findUbicacionById(getUbicacion()));
			articulosService.persistArticulos(articulo);
			
			mensaje("Guardado",getArticulo()+" se ha guardado con exito");
		
		}
	}
	public void onRowEdit(RowEditEvent event) {
		mensaje("Editado", ((Articulos) event.getObject()).getArticulo() + " a " + getArticulo());
		Articulos articulos = (Articulos) event.getObject();
		
		
	}

	public void onRowCancel(RowEditEvent event) {
		mensaje("Cancelada",((Articulos) event.getObject()).getArticulo());
	}
}
