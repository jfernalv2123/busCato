package municipalidad.pto.beans;

import java.util.ArrayList;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import municipalidad.pto.model.Categoria;
import municipalidad.pto.model.Fono;
import municipalidad.pto.model.Mail;
import municipalidad.pto.model.Proveedor;
import municipalidad.pto.objetos.ProveedoresTabla;
import municipalidad.pto.service.CategoriaService;
import municipalidad.pto.service.FonoService;
import municipalidad.pto.service.IngresoService;
import municipalidad.pto.service.MailService;
import municipalidad.pto.service.ProveedorService;

@ManagedBean
@SessionScoped
public class ProveedorBean {
	
	@ManagedProperty(value = "#{proveedorService}")
	ProveedorService proveedorService;
	
	@ManagedProperty(value = "#{categoriaService}")
	CategoriaService categoriaService;
	
	@ManagedProperty(value = "#{fonoService}")
	FonoService fonoService;
	
	@ManagedProperty(value = "#{mailService}")
	MailService mailService;
	
	@ManagedProperty(value = "#{ingresoService}")
	IngresoService ingresoService;
	
	private String proveedor;
	private Integer categoria;
	private String producto;
	private boolean credito;
	private String fono;
	private String mail;
	private Integer idProveedor;
	private List<String> vacio = new ArrayList<String>();
	private List<String> listFono = new ArrayList<String>();
	private List<String> lisMail = new ArrayList<String>();
	
	public void setProveedorService(ProveedorService proveedorService) {
		this.proveedorService = proveedorService;
	}
	
	public void setCategoriaService(CategoriaService categoriaService) {
		this.categoriaService = categoriaService;
	}

	public void setFonoService(FonoService fonoService) {
		this.fonoService = fonoService;
	}

	public void setMailService(MailService mailService) {
		this.mailService = mailService;
	}

	public void setIngresoService(IngresoService ingresoService) {
		this.ingresoService = ingresoService;
	}

	public String getProveedor() {
		return proveedor;
	}
	public void setProveedor(String proveedor) {
		this.proveedor = proveedor;
	}
	public Integer getCategoria() {
		return categoria;
	}
	public void setCategoria(Integer categoria) {
		this.categoria = categoria;
	}
	
	public boolean isCredito() {
		return credito;
	}
	public void setCredito(boolean credito) {
		this.credito = credito;
	}
	
	public List<String> getListFono() {
		return listFono;
	}

	public void setListFono(List<String> listFono) {
		this.listFono = listFono;
	}

	public List<String> getLisMail() {
		return lisMail;
	}

	public void setLisMail(List<String> lisMail) {
		this.lisMail = lisMail;
	}

	public String getFono() {
		return fono;
	}

	public void setFono(String fono) {
		this.fono = fono;
	}

	public String getMail() {
		return mail;
	}

	public void setMail(String mail) {
		this.mail = mail;
	}

	public List<String> getVacio() {
		return vacio;
	}

	public void setVacio(List<String> vacio) {
		this.vacio = vacio;
	}

	public Integer getIdProveedor() {
		return idProveedor;
	}

	public void setIdProveedor(Integer idProveedor) {
		this.idProveedor = idProveedor;
	}

	public String getProducto() {
		return producto;
	}

	public void setProducto(String producto) {
		this.producto = producto;
	}

	public void guardar(){
		FacesContext context = FacesContext.getCurrentInstance();
		if(getCategoria().equals(0)||getProveedor().equals("")){
			context.addMessage(null, new FacesMessage("Error",  "debe ingresar un los campos obligatorios") );
			
		}else{
		Categoria categoria =categoriaService.findCategoriaById(getCategoria());
		Proveedor proveedorAux = new Proveedor(getProveedor(),categoria,isCredito());
		proveedorService.persistProveedor(proveedorAux);
		proveedorAux =proveedorService.proveedorBynombre(getProveedor());
		for(String phone:getListFono()){
			Fono f=new Fono(phone,proveedorAux);
			fonoService.persistFono(f);
		}
		for(String m:getLisMail()){
			Mail mail= new Mail(m, proveedorAux);
			mailService.persistMail(mail);
		}
		context.addMessage(null, new FacesMessage("Guardado",  proveedorAux.getProveedor()) );
		reset();
		}
	}

	public void borrar(int id){
		Proveedor proveedorAux = proveedorService.findProveedorById(id);
		for(Fono f:fonoService.listaFonosByProveedor(proveedorAux.getIdProveedor())){
			fonoService.deleteFono(f);
		}
		for(Mail m:mailService.listaMailByProveedor(proveedorAux.getIdProveedor())){
			mailService.deleteMail(m);
		}
		proveedorService.deleteProveedor(proveedorAux);
		FacesMessage msg = new FacesMessage("Borrado", proveedorAux.getProveedor());
		FacesContext.getCurrentInstance().addMessage(null, msg);
	}
	
	public List<ProveedoresTabla> listaProveedor(){
		return proveedorService.listaProveedores();
	}

	public void addFono(){
		if(listFono.contains(fono)){
			FacesMessage msg = new FacesMessage("ya ingresado", "este numero ya esta en lista");
			FacesContext.getCurrentInstance().addMessage(null, msg);
		}else{
			listFono.add(fono);
			setFono(null);
		}
	}
	public void addMail(){
		if(lisMail.contains(mail)){
			FacesMessage msg = new FacesMessage("ya ingresado", "este mail ya esta en lista");
			FacesContext.getCurrentInstance().addMessage(null, msg);
		}else{
			lisMail.add(mail);
			setMail(null);
		}
	}
	public void reset(){
		
		setProveedor(null);
		setFono(null);
		setMail(null);
	}
	
}
